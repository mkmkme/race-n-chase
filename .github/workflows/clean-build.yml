name: CI

on: [pull_request, push]

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ðŸ¦€ Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          profile: minimal
          override: true

      - run: cargo fmt --all -- --check

      - run: cargo clippy --all --tests -- -D warnings

  build:
    name: ${{ matrix.build }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        build: [Linux, macOS, Win32, Win64, Linux-beta]

        include:
          - build: Linux
            os: ubuntu-latest
          - build: macOS
            os: macOS-latest
          - build: Win32
            os: windows-latest
            rust: stable-i686-pc-windows-msvc
            target: i686-pc-windows-msvc
          - build: Win64
            os: windows-latest
          - build: Linux-beta
            os: ubuntu-latest
            rust: beta

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin/resvg
            target
          key: ${{ runner.os }}-${{ matrix.build }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: ðŸ¦€ Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust || 'stable' }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -yq --no-install-suggests --no-install-recommends install libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --examples --all

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
